= bbbot-ruby

Ruby wrapper for {bbbot}[https://github.com/mconf/bbbot].

bbbot is a command-line java application that simulates a real client for {BigBlueButton}[http://bigbluebutton.org], and this gem allows this java application to be started from within a ruby application. You can just start/stop the bot and configure the initialization parameters. It's not possible to interact with the bot.

It uses {bigbluebutton-api-ruby}[https://github.com/mconf/bigbluebutton-api-ruby] to query the BBB server.

== Where is it used?

Mainly in the integration tests for these two gems: {bigbluebutton-api-ruby}[https://github.com/mconf/bigbluebutton-api-ruby] and {bigbluebutton_rails}[https://github.com/mconf/bigbluebutton_rails].

== Some more information

A meeting in BigBlueButton (BBB) will only be running after the first user establishes a RTMP connection with the server. To establish this connection, this gem uses bbbot, a java application implemented with the same base libraries used in the {BigBlueButton Android client}[https://github.com/mconf/mconf-mobile]. This bot is still in early stages of development, but it can already properly join a meeting.

So, to use this gem <b>your BBB server needs support to the mobile client</b>. In BBB 0.8 the support is already available in a standard installation, you just need to set the pass the mobile_salt when a BigBlueButtonBot is instantiated. For earlier versions of BigBlueButton you need to install it manually (it's very simple). See: http://code.google.com/p/mconf/wiki/MconfMobile for more information.

== Usage example

The java application that creates the bots is called when you instantiate a <tt>BigBlueButtonBot</tt>. The meeting that the bot will join must be already created.

  api = BigBlueButton::BigBlueButtonApi.new("http://server.com/bigbluebutton/api", "my-secret-salt", "0.8")
  BigBlueButtonBot.new(api, "meeting-id", "03b07", 2, 60)

And to stop the bots (it sends a SIGTERM signal to the processes):

  BigBlueButtonBot.finalize


=== Print debug information

By default the bot will *not* print any information to stdout. To do so, set the environment variable <tt>DEBUG</tt> when running your application.

So, for instance, if you're calling <tt>bbbot-ruby</tt> inside a script called <tt>run-bot.rb</tt>, you should run it with:

  ruby run-bot.rb DEBUG=1
